
//
//  *  Programmer:                     Jeff C. Cheng
//  *  Last modified:                  09:57PM 02-08-2024
//  *  Problem:                        Convert to Binary (Zero)
//  @param {integer} number
//  @return {integer}
//

let converToBinary = (number) =>
{

//********************************************************************************************************************
//  Step 1: create an empty string
//********************************************************************************************************************

    let converted = "";

//********************************************************************************************************************
//  Step 2: while the number isn't 0
//********************************************************************************************************************

    while (number != 0)
    {

//********************************************************************************************************************
//  Step 3: pre-pend a "0" or "1" based on whether the number is even or odd to the result
//********************************************************************************************************************

        if ((number & 1) == 0)
        {
            converted = "0" + converted;
        }
        else
        {
            converted = "1" + converted;
        }
        number >>= 1;
    }

//********************************************************************************************************************
//  Step 4: return the result
//********************************************************************************************************************

    return converted;
}

//  64  32  16  8   4   2   0
//  1   0   1   1   0   0   0
//  0   0   1   0   1   0   0

number1 = 88
number2 = 20

console.log(converToBinary(number1));
console.log(converToBinary(number2));
